version: 2.1
executors:
  docker-publisher:
    environment:
      IMAGE_NAME: thenecromancerx/docker-python-serverless
    docker:
      - image: circleci/buildpack-deps:stretch
jobs:
  build-publish:
    executor: docker-publisher
    parameters:
      distro:
        default: "alpine"
        description: Docker image distro
        type: enum
        enum: ["slim", "alpine", "buster", "stretch"]
      python_version:
        description: Supported Lambda Python Version
        default: "3.8"
        type: enum
        enum: ["3.6", "3.7", "3.8"]
      node_version:
        description: Node Version
        default: "15"
        type: enum
        enum: ["10", "12", "14", "15"]
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build Docker Image
          command: |
            if [[ $distro = 'buster' ]]
            then
              docker build -t $IMAGE_NAME:python${python_version}-nodejs${node_version}-buster --build-arg NODE=python${python_version}-nodejs${node_version} . -f Dockerfile
            elif [[ $distro = 'alpine' ]]
            then
              docker build -t $IMAGE_NAME:python${python_version}-nodejs${node_version}-alpine --build-arg NODE=python${python_version}-nodejs${node_version}-alpine . -f alpine.Dockerfile
            else
              docker build -t $IMAGE_NAME:python${python_version}-nodejs${node_version}-$distro --build-arg NODE=python${python_version}-$distro . -f Dockerfile
            fi
      - run:
          name: Publish Docker Image to Docker Hub
          command: |
            echo "$DOCKERHUB_PASS" | docker login -u "$DOCKERHUB_USERNAME" --password-stdin
            docker push $IMAGE_NAME:python${python_version}-nodejs${node_version}-$distro
            if [[ $distro = 'alpine' ]] && [[ $node_version = '15' ]] && [[ $python_version = '3.8' ]]
            then
              docker tag $IMAGE_NAME:python${python_version}-nodejs${node_version}-$distro $IMAGE_NAME:$latest
              docker push $IMAGE_NAME:latest
            fi
workflows:
  version: 2
  build-latest:
    jobs:
      - build-publish:
          filters:
            branches:
              only: test-nested-loop
      - build-publish:
          filters:
            branches:
              only: test-nested-loop
      - build-publish:
          filters:
            branches:
              only: test-nested-loop
